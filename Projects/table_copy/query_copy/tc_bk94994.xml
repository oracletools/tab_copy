<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 Citi. All rights reserved.
     Author: Alex.Buzunov@citi.com (Alex Buzunov)
     Python Implementation of ETL pipeline
-->
<etldataflow name="FRNBNY_QUERY_COPY2_TEST">
<globals> 
 
	<!-- PIPELINE execution type
		 SYNC - synchronous, ANYNC - asynchronous 
	-->
	  <param name="FLOW_TYPE" value="ASYNC"></param>	

	  <param name="FIELD_TERMINATOR" value="|"></param>
	  <param name="LINE_TERMINATOR" value="~"></param>
	  
  
	  <param name="FROM_DB" value="%AB_SMARTP1B%"></param>
	  <param name="FROM_SCHEMA" value="CSMARTVOL"></param>
	  
	  <param name="TO_DB" value="%CVOL_SMARTQ1%"></param>
	  <param name="TO_SCHEMA" value="CSMARTVOL"></param>	  
	  
	   <!--will spool ALL records if LAME_DUCK=0-->
	  <param name="LAME_DUCK" value='0'></param>
	  <param name="ARRAYSIZE" value="5000"></param>
	  <param name="COPYCOMMIT" value="4"></param>
	  <!--sqlp attribute-->

	  <param name="IF_TRUNCATE" value="0"></param>
	  
	  <param name="IF_SHOW_SERVEROUTPUT" value="1"></param>
</globals>


<worker name="FRBNY_COPY2_TEST_TML">
  <exec_query_copy>
    <table_utils 	method="%QUERY_COPY_METHOD%" >
	<param name="TO_TABLE" value="FRBNY_TML"></param>	
	<param name="IF_CREATE_TARGET_TABLE" value="0"></param>		 
      <sql_template>
        <![CDATA[
SELECT 
--+PARALLEL(TRD_VOL_UNION,8)  as HINT,
  TRD_VOL_UNION.METRICS_CAT, 
TRUNC(TRD_VOL_UNION.COB_DT) as COB_DT,
  TRD_VOL_UNION.SCR_UID_GRD,
  TRD_VOL_UNION.FEED_SRC_SYS,
  MKT_OF_SET.FIRM_AGT,
  TRD_VOL_UNION.EXCH,
  SUM(nvl(TRD_VOL_UNION.ITEM_CNT,0)) as ITEM_CNT,
  SUM(nvl(TRD_VOL_UNION.CALC_USD_AMT,0)) as CALC_USD_AMT,
  SUM(nvl(TRD_VOL_UNION.CON_USD_AMT,0)) as CON_USD_AMT,
  TRD_VOL_UNION.VOL_EVNT_TYP,
  TRD_VOL_UNION.TRD_STA,
  TRD_VOL_UNION.OWN_CD_3,
  TRD_VOL_UNION.CTP_NAM,
  TRD_VOL_UNION.SETL_LOCA,
  TRD_VOL_UNION.TRAN_TYP_1,
  MKT_OF_SET.CTRY_DESC,
  TRD_VOL_UNION.CTP_MNEMONIC,
  TRD_VOL_UNION.LCL_CCY,
  TRD_VOL_UNION.LGL_ENTY_NAM_PP,
  MAN_REF_LGL_ENTY.LGL_ENTY_NAM,
  TRD_VOL_UNION.SETL_BANK_LOC,
  SUM(nvl(TRD_VOL_UNION.USD_AMT,0)) as USD_AMT,
  TRD_VOL_UNION.BUY_SELL,
  TRD_VOL_UNION.ASET_LVL_ONE_CD,
  TRD_VOL_UNION.ASET_LVL_ONE_DESC,
  TRD_VOL_UNION.ASET_LVL_TWO_CD,
  TRD_VOL_UNION.ASET_LVL_TWO_DESC,
  TRD_VOL_UNION.ASET_LVL_THR_CD,
  TRD_VOL_UNION.ASET_LVL_THR_DESC,
  ASET.ASET_LVL_2_DESC,
  ASET.ASET_LVL_0_DESC,
  ESALES.MG_NAME,
  ESALES.GP_NAME,
  ESALES.ACCOUNT_SHORT_NAME,
  ASET.ASET_LVL_3_DESC,
  ASET.ASET_LVL_1_DESC,
  TRD_VOL_UNION.EXEC_TYP,
  TRD_VOL_UNION.TRAN_TYP,
  TRD_VOL_UNION.FIRM_ACCT_MNEMONIC,
  --REF_ESALES_FIRM.MNEMONIC,
  ESALES.MNEMONIC,
  MKT_OF_SET.CTRY_CD_2,
  TRD_VOL_UNION.OWN_CD_1,
  TRD_VOL_UNION.OWN_CD_2,
  TRD_VOL_UNION.OWN_CD_4,
  --CSMARTREF.REF_SMC.SCR_TYP_LVL_1,
  --CSMARTREF.REF_SMC.SCR_TYP_LVL_2,
  --CSMARTREF.REF_SMC.SCR_TYP_LVL_3 ,
  MAN_REF_LGL_ENTY.LGL_ENTY_ID,
  ESALES.COUNTRY,
  ESALES.SALESPERSON_COUNTRY_CODE,
  ESALES.COUNTRY_OF_INCORP_CITSHP,
  ESALES.PARENT_COUNTRY_OF_INCORP,
  ESALES.GP_COUNTRY_OF_INCORP
  --CSMARTREF.REF_SMC.ORIG_ISS_CTRY,
  --CSMARTREF.REF_SMC.ISS_CTRY,
  --CSMARTREF.REF_SMC.ISSUER_CTRY_OF_INCORP 
FROM
  (
  select a.*, a1.TRAN_TYP_1, a1.OWN_CD_3, a1.TRD_STA_7 ,a1.TRD_STA_10, a1.TRAN_TYP_4, a1.TRD_STA_2 , a1.TRD_STA_1, a1.OWN_CD_2, a1.OWN_CD_4, a1.OWN_CD_1 from 
	  (SELECT * FROM csmartvol.TRD_VOL_UNION partition (jan_111) where src_file_cd  IN  ( 'TMLSALO', 'TMLSMB')   and metrics_cat = 'Volumes'
	  UNION ALL
	  SELECT * FROM csmartvol.TRD_VOL_UNION partition (jan_112) where src_file_cd  IN  ( 'TMLSALO', 'TMLSMB')   and metrics_cat = 'Volumes'
	   ) a,
	  ( SELECT * FROM csmartvol.TRD_VOL_UNION_1 partition (jan_111) where src_file_cd  IN  ( 'TMLSALO', 'TMLSMB')   
	    UNION ALL
	   SELECT * FROM csmartvol.TRD_VOL_UNION_1 partition (jan_112) where src_file_cd  IN  ( 'TMLSALO', 'TMLSMB')   
	  ) a1
    where 1=1
    and a.TRD_VOL_SID=a1.TRD_VOL_SID and a.COB_DT=a1.COB_DT and a.SRC_FILE_CD=a1.SRC_FILE_CD
    ) TRD_VOL_UNION,
  CSMARTREF.MAN_REF_MKT_OF_SETL  MKT_OF_SET,
  (SELECT MAN_REF_LGL_ENTY_XREF.LGL_ENTY_ID,LGL_ENTY_KEY, LGL_ENTY_NAM FROM  CSMARTREF.MAN_REF_LGL_ENTY_DATA, CSMARTREF.MAN_REF_LGL_ENTY_XREF
    WHERE ( MAN_REF_LGL_ENTY_DATA.LGL_ENTY_ID=MAN_REF_LGL_ENTY_XREF.LGL_ENTY_ID  ) and
    MAN_REF_LGL_ENTY_DATA.LGL_ENTY_RGN in ('NAM','EMEA')
    ) MAN_REF_LGL_ENTY,
    (
    	select * from csmartref.man_ref_aset_lvl_data where aset_lvl_0_desc in ('Equity','Fixed Income')
    ) ASET,
    (
    select ACCOUNT_ID,MG_NAME, GP_NAME, ACCOUNT_SHORT_NAME, MNEMONIC, COUNTRY, SALESPERSON_COUNTRY_CODE, COUNTRY_OF_INCORP_CITSHP, PARENT_COUNTRY_OF_INCORP,GP_COUNTRY_OF_INCORP from csmartref.ref_esales
) ESALES
 WHERE
   ( MAN_REF_LGL_ENTY.LGL_ENTY_KEY=TRD_VOL_UNION.LGL_ENTY_KEY  )
  AND  ( MKT_OF_SET.FIN_INSM_KEY(+)=TRD_VOL_UNION.MKT_OF_SETL_CD  )
  and TRD_VOL_UNION.aset_lvl_key = aset.aset_lvl_key (+)
  and TRD_VOL_UNION.CTP_UID_GRD=ESALES.ACCOUNT_ID(+)
GROUP BY
    TRD_VOL_UNION.METRICS_CAT,
  TRUNC(TRD_VOL_UNION.COB_DT),
    TRD_VOL_UNION.SCR_UID_GRD,
    TRD_VOL_UNION.FEED_SRC_SYS,
    MKT_OF_SET.FIRM_AGT,
    TRD_VOL_UNION.EXCH,
    TRD_VOL_UNION.VOL_EVNT_TYP,
    TRD_VOL_UNION.TRD_STA,
    TRD_VOL_UNION.OWN_CD_3,
    TRD_VOL_UNION.CTP_NAM,
    TRD_VOL_UNION.SETL_LOCA,
    TRD_VOL_UNION.TRAN_TYP_1,
    MKT_OF_SET.CTRY_DESC,
    TRD_VOL_UNION.CTP_MNEMONIC,
    TRD_VOL_UNION.LCL_CCY,
    TRD_VOL_UNION.LGL_ENTY_NAM_PP,
    MAN_REF_LGL_ENTY.LGL_ENTY_NAM,
    TRD_VOL_UNION.SETL_BANK_LOC,
    TRD_VOL_UNION.BUY_SELL,
    TRD_VOL_UNION.ASET_LVL_ONE_CD,
    TRD_VOL_UNION.ASET_LVL_ONE_DESC,
    TRD_VOL_UNION.ASET_LVL_TWO_CD,
    TRD_VOL_UNION.ASET_LVL_TWO_DESC,
    TRD_VOL_UNION.ASET_LVL_THR_CD,
    TRD_VOL_UNION.ASET_LVL_THR_DESC,
    ASET.ASET_LVL_2_DESC,
    ASET.ASET_LVL_0_DESC,
    ESALES.MG_NAME,
    ESALES.GP_NAME,
    ESALES.ACCOUNT_SHORT_NAME,
    ASET.ASET_LVL_3_DESC,
    ASET.ASET_LVL_1_DESC,
    TRD_VOL_UNION.EXEC_TYP,
    TRD_VOL_UNION.TRAN_TYP,
    TRD_VOL_UNION.FIRM_ACCT_MNEMONIC,
    --ESALES.MNEMONIC,
    ESALES.MNEMONIC,
    MKT_OF_SET.CTRY_CD_2,
    TRD_VOL_UNION.OWN_CD_1,
    TRD_VOL_UNION.OWN_CD_2,
    TRD_VOL_UNION.OWN_CD_4,
    --CSMARTREF.REF_SMC.SCR_TYP_LVL_1,
    --CSMARTREF.REF_SMC.SCR_TYP_LVL_2,
    --CSMARTREF.REF_SMC.SCR_TYP_LVL_3 ,
    MAN_REF_LGL_ENTY.LGL_ENTY_ID,
    ESALES.COUNTRY,
    ESALES.SALESPERSON_COUNTRY_CODE,
    ESALES.COUNTRY_OF_INCORP_CITSHP,
    ESALES.PARENT_COUNTRY_OF_INCORP,
  	ESALES.GP_COUNTRY_OF_INCORP
]]>
      </sql_template>
    </table_utils>
  </exec_query_copy>
  
</worker>




</etldataflow>
